function r(r,t,e,n,o){for(var i=0,u=0,f=0;f<o;f++)if(f!==e){for(var s=0;s<o;s++)s!==n&&(t[i][u]=r[f][s],++u);++i}}function t(r){for(var t=[],e=0;e<r;++e)t[e]=new Float32Array(r);return t}function e(n,o){if(1===o)return n[0][0];if(2===o)return n[0][0]*n[1][1]-n[0][1]*n[1][0];if(3===o)return n[0][0]*n[1][1]*n[2][2]+n[0][1]*n[1][2]*n[2][0]+n[0][2]*n[1][0]*n[2][1]-n[0][2]*n[1][1]*n[2][0]-n[0][1]*n[1][0]*n[2][2]-n[0][0]*n[1][2]*n[2][1];for(var i=1,u=0,f=t(o),s=0;s<o;++s)r(n,f,0,s,o),u+=i*n[0][s]*e(f,o-1),i=-i;return u}function n(n,o){var i=n.length,u=n[0],f=[];o=o||new Float32Array(i+1);for(var s=1;s<i;++s){for(var a=n[s],v=[],h=0;h<i;++h)v[h]=a[h]-u[h];f.push(v)}return function(n,o){var i=n[0].length;if(o=o||new Float32Array(i),3===i){var u=n[0],f=n[1],s=u[0],a=u[1],v=u[2],h=f[0],g=f[1],l=f[2];o[0]=a*l-v*g,o[1]=v*h-s*l,o[2]=s*g-a*h}else for(var c=i%2?-1:1,p=t(i),d=0;d<i;++d)r(n,p,i-1,d,i),o[d]=c*e(p,i-1),c=-c}(f,o),o[i]=-function(r,t){for(var e=r.length,n=r[0]*t[0],o=1;o<e;++o)n+=r[o]*t[o];return n}(u,o),function(r){for(var t=r.length,e=r[0]*r[0],n=1;n<t-1;++n)e+=r[n]*r[n];if(0===e)return r;for(e=1/Math.sqrt(e),n=0;n<t;++n)r[n]*=e}(o),o}function o(r,t){for(var e=r.length,n=t[e],o=0;o<e;++o)n+=r[o]*t[o];return n}function i(r,t){var e=r.pop();if(e===t)return r.length;var n=r.indexOf(t);if(-1===n)throw r.push(e),new Error("Removing component that's not present");return r[n]=e,n}var u=function(r){this.verts=[],this.facet=r},f=function(){function r(){this.outsideSet=[],this.outsideDist=[],this.ridges=[]}return r.prototype.getFurthestPoint=function(){var r=this.outsideSet,t=this.outsideDist,e=r.length;if(0===e)return-1;for(var n=r[0],o=t[0],i=1;i<e;++i)t[i]>o&&(o=t[i],n=r[i]);return n},r}();function s(r,t,e){var i=r.ridges.map((function(r){return t[r.verts[0]]})),u=r.plane=n(i);o(e,u)>0&&(!function(r){for(var t=r.length,e=0;e<t;++e)r[e]=-r[e]}(u),r.ridges.reverse(),r.ridges.forEach((function(r){return r.verts.reverse()})))}function a(r,t,e){for(var n=t.verts,o=n.length,i=0,u=e;i<u.length;i++)for(var f=0,s=u[i].ridges;f<s.length;f++){var a=s[f];if(!a.neighbor){for(var v=a.verts.indexOf(n[0]),h=v>=0,g=1;h&&g<o;)v=(v+1)%o,h=a.verts[v]==n[g],++g;if(h)return t.neighbor=a,void(a.neighbor=t)}}}function v(r,t,e){for(var n=e.map((function(r){return[]})),i=r.length,u=0;u<i;++u)for(var f=r[u],s=t[f],a=0,v=e;a<v.length;a++){var h=v[a],g=o(s,h.plane);if(g>0){h.outsideSet.push(f),h.outsideDist.push(g);break}}return n}function h(r,t,e,n){e.push(t),t.currentPoint=r;for(var i=0,u=t.ridges;i<u.length;i++){var f=u[i],s=f.neighbor.facet;s.currentPoint!==r&&(o(r,s.plane)>0?h(r,s,e,n):n.push(f))}}function g(r,t,e,n,o,i){var v=new f,h=r.verts.slice();h.push(t),v.ridges.push(r),r.facet=v;for(var g=1;g<i;++g){for(var l=new u(v),c=0;c<i-1;++c)l.verts[c]=h[(g+c)%i];a(0,l,n),v.ridges.push(l)}return s(v,e,o),v}function l(r,t,e,n,o){for(var i=[],u=0,f=e;u<f.length;u++){var s=g(f[u],t,r,i,n,o);i.push(s)}return i}function c(r){if(0!==r.length){var t=function(r){return r.length}(r[0]);r.length<=t&&console.log("A convex hull in "+t+" dimensions requires at least "+(t+1)+" points.");for(var e=r[0].slice(),n=0;n<t;++n){for(var o=1;o<=t;++o)e[n]+=r[o][n];e[n]/=t+1}var g=function(r,t,e){for(var n=[],o=t+1,i=[],v=0;v<=t;++v){for(var h=new f,g=0;g<t;++g)i[g]=(v+g)%o;for(var l=0;l<t;++l){var c=h.ridges[l]=new u(h);for(g=0;g<t-1;++g)c.verts[g]=i[(l+g)%t];a(0,c,n)}s(h,r,e),n.push(h)}return n}(r,t,e),c=[];for(o=t+1;o<r.length;++o)c.push(o);v(c,r,g);for(var p=!1;!p;){p=!0;for(o=0;o<g.length;++o){var d=g[o],w=d.getFurthestPoint();if(-1!==w){i(d.outsideSet,w);var m=[],S=[];h(r[w],d,m,S);for(var b=l(r,w,S,e,t),y=0,F=m;y<F.length;y++){var x=F[y];i(g,x)<=o&&--o,v(x.outsideSet,r,b),x.outsideSet.length>0&&(p=!1)}g.push.apply(g,b)}}}return g.map((function(r){for(var t=r.ridges[0].verts.slice(),e=r.plane,n=r.ridges.length,o=1;o<n;++o){var i=r.ridges[o].verts;t.push(i[i.length-1])}return{verts:t,plane:e}}))}}export{c as quickHull};
