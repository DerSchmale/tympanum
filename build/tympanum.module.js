function r(r,t,n,e,o){for(var i=0,f=0,a=0;a<o;a++)if(a!==n){for(var u=0;u<o;u++)u!==e&&(t[i][f]=r[a][u],++f);++i}}function t(r){for(var t=[],n=0;n<r;++n)t[n]=new Float32Array(r);return t}function n(e,o){if(1===o)return e[0][0];if(2===o)return e[0][0]*e[1][1]-e[0][1]*e[1][0];if(3===o)return e[0][0]*e[1][1]*e[2][2]+e[0][1]*e[1][2]*e[2][0]+e[0][2]*e[1][0]*e[2][1]-e[0][2]*e[1][1]*e[2][0]-e[0][1]*e[1][0]*e[2][2]-e[0][0]*e[1][2]*e[2][1];for(var i=1,f=0,a=t(o),u=0;u<o;++u)r(e,a,0,u,o),f+=i*e[0][u]*n(a,o-1),i=-i;return f}function e(e,o){var i=e.length,f=e[0],a=[];o=o||new Float32Array(i+1);for(var u=1;u<i;++u){for(var v=e[u],s=[],h=0;h<i;++h)s[h]=v[h]-f[h];a.push(s)}return function(e,o){var i=e[0].length;if(o=o||new Float32Array(i),3===i){var f=e[0],a=e[1],u=f[0],v=f[1],s=f[2],h=a[0],c=a[1],l=a[2];o[0]=v*l-s*c,o[1]=s*h-u*l,o[2]=u*c-v*h}else for(var g=i%2?-1:1,p=t(i),d=0;d<i;++d)r(e,p,i-1,d,i),o[d]=g*n(p,i-1),g=-g}(a,o),o[i]=-function(r,t){for(var n=r.length,e=r[0]*t[0],o=1;o<n;++o)e+=r[o]*t[o];return e}(f,o),function(r){for(var t=r.length,n=r[0]*r[0],e=1;e<t-1;++e)n+=r[e]*r[e];if(0===n)return r;for(n=1/Math.sqrt(n),e=0;e<t;++e)r[e]*=n}(o),o}function o(r,t){for(var n=r.length,e=t[n],o=0;o<n;++o)e+=r[o]*t[o];return e}function i(r,t){var n=r.pop();if(n===t)return r.length;var e=r.indexOf(t);if(-1===e)throw r.push(n),new Error("Removing component that's not present");return r[e]=n,e}var f=function(r){this.verts=[],this.facet=r},a=function(){this.ridges=[]},u=function(){this.outsideSet=[],this.outsideDist=[]};function v(){var r=new a;return r.meta=new u,r}function s(r){var t=r.meta,n=t.outsideSet,e=t.outsideDist,o=n.length;if(0===o)return-1;for(var i=n[0],f=e[0],a=1;a<o;++a)e[a]>f&&(f=e[a],i=n[a]);return i}function h(r,t,n){var i=r.ridges.map((function(r){return t[r.verts[0]]})),f=r.plane=e(i);o(n,f)>0&&(!function(r){for(var t=r.length,n=0;n<t;++n)r[n]=-r[n]}(f),r.ridges.reverse(),r.ridges.forEach((function(r){return r.verts.reverse()})))}function c(r,t,n){for(var e=t.verts,o=e.length,i=0,f=n;i<f.length;i++)for(var a=0,u=f[i].ridges;a<u.length;a++){var v=u[a];if(!v.neighbor){for(var s=v.verts.indexOf(e[0]),h=s>=0,c=1;h&&c<o;)s=(s+1)%o,h=v.verts[s]==e[c],++c;if(h)return t.neighbor=v,void(v.neighbor=t)}}}function l(r,t,n){for(var e=n.map((function(r){return[]})),i=r.length,f=0;f<i;++f)for(var a=r[f],u=t[a],v=0,s=n;v<s.length;v++){var h=s[v],c=o(u,h.plane);if(c>0){var l=h.meta;l.outsideSet.push(a),l.outsideDist.push(c);break}}return e}function g(r,t,n,e){n.push(t),t.meta.currentPoint=r;for(var i=0,f=t.ridges;i<f.length;i++){var a=f[i],u=a.neighbor.facet;u.meta.currentPoint!==r&&(o(r,u.plane)>0?g(r,u,n,e):e.push(a))}}function p(r,t,n,e,o,i){var a=v(),u=r.verts.slice();u.push(t),a.ridges.push(r),r.facet=a;for(var s=1;s<i;++s){for(var l=new f(a),g=0;g<i-1;++g)l.verts[g]=u[(s+g)%i];c(0,l,e),a.ridges.push(l)}return h(a,n,o),a}function d(r,t,n,e,o){for(var i=[],f=0,a=n;f<a.length;f++){var u=p(a[f],t,r,i,e,o);i.push(u)}return i}function m(r){if(0!==r.length){var t=function(r){return r.length}(r[0]);r.length<=t&&console.log("A convex hull in "+t+" dimensions requires at least "+(t+1)+" points.");for(var n=r[0].slice(),e=0;e<t;++e){for(var o=1;o<=t;++o)n[e]+=r[o][e];n[e]/=t+1}var a=function(r,t,n){for(var e=[],o=t+1,i=[],a=0;a<=t;++a){for(var u=v(),s=0;s<t;++s)i[s]=(a+s)%o;for(var l=0;l<t;++l){var g=u.ridges[l]=new f(u);for(s=0;s<t-1;++s)g.verts[s]=i[(l+s)%t];c(0,g,e)}h(u,r,n),e.push(u)}return e}(r,t,n),u=[];for(o=t+1;o<r.length;++o)u.push(o);l(u,r,a);for(var p=!1;!p;){p=!0;for(o=0;o<a.length;++o){var m=a[o],w=s(m);if(-1!==w){i(m.meta.outsideSet,w);var S=[],b=[];g(r[w],m,S,b);for(var x=d(r,w,b,n,t),y=0,A=S;y<A.length;y++){var D=A[y];i(a,D)<=o&&--o,l(D.meta.outsideSet,r,x),D.meta.outsideSet.length>0&&(p=!1)}a.push.apply(a,x)}}}return a.forEach((function(r){return r.meta=null})),a}}export{m as quickHull};
